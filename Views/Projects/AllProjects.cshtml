@model IEnumerable<BugTracker.Models.Project>
@using BugTracker.Models.Enums
@using Microsoft.AspNetCore.Identity
@using BugTracker.Services.Interfaces

@inject UserManager<BTUser> UserManager
@inject IBTProjectService ProjectService

@{
    ViewData["Title"] = "All Projects";
    BTUser btUser = await UserManager.GetUserAsync(User);
}

<h1>All Projects</h1>

@if (User.IsInRole(nameof(Roles.Admin)) || User.IsInRole(nameof(Roles.ProjectManager)))
{
    <p>
        <a class = "badge bg-dark p-2" asp-action="Create">Create New</a>
    </p>
}

<table class="table table-striped">
    <thead>
        <tr class = "bg-dark">
            <th class = "text-white">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th class = "text-white">
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th class = "text-white">
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th class = "text-white">
                @Html.DisplayNameFor(model => model.EndDate)
            </th>            
            
            <th class = "text-white">
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            
            <th class = "text-white">
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th class = "text-white"></th>
        </tr>
    </thead>
    <tbody style="overflow-y:auto;">
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class = "col-5">
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>                
                
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
               
                <td >
                    @Html.DisplayFor(modelItem => item.ProjectPriority.Name)
                </td>
                <td >
                    <a class="btn btn-sm btn-outline-info" asp-action="Details" asp-route-id="@item.Id"><i class="fs-5 bi-justify"></i></a>

                    @{
                        bool isProjectPM = (await ProjectService.GetProjectManagerAsync(item.Id))?.Id == btUser.Id;
                    }

                    @if (User.IsInRole(nameof(Roles.Admin)) || isProjectPM)
                    {
                        <a class="btn btn-sm btn-outline-secondary" asp-action="Edit" asp-route-id="@item.Id"><i class="fs-5 bi-pencil"></i></a>

                        @if (item.Archived)
                        {
                            <a asp-action="Restore" asp-route-id="@item.Id" class="btn btn-sm btn-outline-success"><i class="fs-5 bi-bag-check"></i></a>                       }

                        else
                        {
                            <a asp-action="Archive" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger"><i class="fs-5 bi-archive"></i></a>
                        }
                    }

                </td>
            </tr>
        }
    </tbody>
</table>
